version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:${CONFLUENT}
    container_name: zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: WARN

  kafka-broker:
    image: confluentinc/cp-kafka:${CONFLUENT}
    container_name: kafka-broker
    hostname: kafka-broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:19092,EXTERNAL://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-broker:19092,EXTERNAL://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN

  schema-registry:
    image: confluentinc/cp-schema-registry:${CONFLUENT}
    container_name: schema-registry
    hostname: schema-registry
    ports:
      - "8081:8081"
    depends_on:
      - kafka-broker
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka-broker:19092"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: WARN

  # /usr/share/confluent-hub-components/
  mongodb-connect:
    image: mongodb-connect-${ENCRYPTION}:${CONFLUENT}
    build:
      dockerfile: mongodb-connect.Dockerfile
    container_name: mongodb-connect
    hostname: mongodb-connect
    ports:
      - "8083:8083"
    depends_on:
      - kafka-broker
    volumes:
      - ../../confluent-encryption-${ENCRYPTION}/confluent-encryption-common-${ENCRYPTION}/confluent-encryption-common-${ENCRYPTION}.jar:/etc/kafka-connect/jars/confluent-encryption-common-${ENCRYPTION}.jar
      - ../../confluent-encryption-${ENCRYPTION}/confluent-encryption-kafka-${ENCRYPTION}/confluent-encryption-kafka-${ENCRYPTION}.jar:/etc/kafka-connect/jars/confluent-encryption-kafka-${ENCRYPTION}.jar
      - ../../confluent-encryption-${ENCRYPTION}/confluent-encryption-serializer-${ENCRYPTION}/confluent-encryption-serializer-${ENCRYPTION}.jar:/etc/kafka-connect/jars/confluent-encryption-serializer-${ENCRYPTION}.jar
      - ../../confluent-encryption-${ENCRYPTION}/confluent-encryption-vault-${ENCRYPTION}/confluent-encryption-vault-${ENCRYPTION}.jar:/etc/kafka-connect/jars/confluent-encryption-vault-${ENCRYPTION}.jar
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka-broker:19092"
      CONNECT_REST_PORT: 8083
      CONNECT_LISTENERS: http://0.0.0.0:8083
      CONNECT_GROUP_ID: "mongodb-connect"
      CONNECT_REPLICATION_FACTOR: 1
      CONNECT_CONFIG_STORAGE_TOPIC: mongodb-connect-config
      CONNECT_OFFSET_STORAGE_TOPIC: mongodb-connect-offset
      CONNECT_STATUS_STORAGE_TOPIC: mongodb-connect-status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: localhost
